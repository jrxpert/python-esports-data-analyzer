[supervisord]
priority=1
user=root
nodaemon=true
logfile=/var/log/supervisor.log
logfile_maxbytes=0
pidfile=/run/supervisord.pid


[unix_http_server]
file=/run/supervisor.sock


[supervisorctl]
serverurl=unix:///run/supervisor.sock


[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface


[program:postgres]
priority=1
user=postgres
command=postgres -D %(ENV_DB_DATA)s -c config_file=%(ENV_DB_DATA)s/postgresql.conf
autostart=true
autorestart=true


[program:cron]
priority=2
command=crond -f -L 15 > /var/log/supervisord-cron.out.log
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisord-cron.err.log
stdout_logfile=/var/log/supervisord-cron.out.log


[program:nginx]
priority=3
command=/usr/sbin/nginx
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisord-stdout.log
stdout_logfile_maxbytes=0
stderr_logfile=/var/log/supervisord-stderr.log
stderr_logfile_maxbytes=0
# Graceful stop, see http://nginx.org/en/docs/control.html
stopsignal=QUIT


[program:uwsgi]
priority=4
# Wait for postgres start, so we should use normal ENV style, not supervisord one
command=bash -c 'while ! pg_isready --username=postgres --host=${DB_HOST} --port=${DB_PORT}; do sleep 1; done; sudo -u postgres psql -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname='\''${DB_NAME}'\''"; /usr/bin/uwsgi --ini ${CONF_DIR}/uwsgi.ini;'
autostart=true
autorestart=true
stdout_logfile=/var/log/uwsgi/supervisord-stdout.log
stderr_logfile=/var/log/uwsgi/supervisord-stderr.log
